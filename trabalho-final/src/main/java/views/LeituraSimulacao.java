package views;

import arquivo.ArquivoCSV;

import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JInternalFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.LayoutStyle;
import javax.swing.SwingConstants;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;

/**
 * {@link JInternalFrame} que contém o formulário utilizado
 * para importar dados de simulação de um arquivo estruturado
 * para a aplicação.
 *
 * @author Lucas da Paz
 */
public class LeituraSimulacao extends javax.swing.JInternalFrame {

	/**
	 * Inicializa um novo frame {@link LeituraSimulacao}.
	 */
	public LeituraSimulacao() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    JPanel painelHeader = new JPanel();
    JLabel title = new JLabel();
    JPanel painelArquivo = new JPanel();
    JLabel labelArquivo = new JLabel();
    inputArquivo = new JTextField();
    JButton btnRealizarSimulacao = new JButton();
    JPanel paineAjuda = new JPanel();
    JButton btnAjuda = new JButton();

    setClosable(true);
    setIconifiable(true);
    setMaximizable(true);
    setResizable(true);
    setTitle("Realizar simulação");
    setPreferredSize(new Dimension(500, 270));
    setVisible(true);

    title.setFont(Constantes.FONTE_TITULO);
    title.setHorizontalAlignment(SwingConstants.CENTER);
    title.setLabelFor(this);
    title.setText(getTitle());

    GroupLayout painelHeaderLayout = new GroupLayout(painelHeader);
    painelHeader.setLayout(painelHeaderLayout);
    painelHeaderLayout.setHorizontalGroup(painelHeaderLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
      .addGroup(painelHeaderLayout.createSequentialGroup()
        .addContainerGap(31, Short.MAX_VALUE)
        .addComponent(title, GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
        .addContainerGap(31, Short.MAX_VALUE))
    );
    painelHeaderLayout.setVerticalGroup(painelHeaderLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
      .addGroup(painelHeaderLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(title, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    painelArquivo.setBorder(BorderFactory.createTitledBorder("Arquivo de simulação"));
    painelArquivo.setPreferredSize(new Dimension(500, 225));

    labelArquivo.setLabelFor(inputArquivo);
    labelArquivo.setText("Nome do arquivo:");
    labelArquivo.setPreferredSize(new Dimension(120, 30));

    inputArquivo.setToolTipText("Informe o nome do cliente");
    inputArquivo.setPreferredSize(new Dimension(185, 30));

    btnRealizarSimulacao.setText("Simular");
    btnRealizarSimulacao.setToolTipText("Buscar arquivos e realizar simulação");
    btnRealizarSimulacao.setCursor(new Cursor(Cursor.HAND_CURSOR));
    btnRealizarSimulacao.setPreferredSize(new Dimension(95, 30));
    getRootPane().setDefaultButton(btnRealizarSimulacao);
    btnRealizarSimulacao.addActionListener(this::realizaSimulacao);

    GroupLayout painelArquivoLayout = new GroupLayout(painelArquivo);
    painelArquivo.setLayout(painelArquivoLayout);
    painelArquivoLayout.setHorizontalGroup(painelArquivoLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
      .addGroup(painelArquivoLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(labelArquivo, GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(inputArquivo, GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(btnRealizarSimulacao, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        .addContainerGap())
    );
    painelArquivoLayout.setVerticalGroup(painelArquivoLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
      .addGroup(painelArquivoLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(painelArquivoLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
          .addComponent(labelArquivo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
          .addComponent(btnRealizarSimulacao, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
          .addComponent(inputArquivo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    paineAjuda.setLayout(new FlowLayout(FlowLayout.RIGHT, 15, 5));

    btnAjuda.setText("Ajuda");
    btnAjuda.setToolTipText("Mostrar informações sobre a simulação");
    btnAjuda.setCursor(new Cursor(Cursor.HAND_CURSOR));
    btnAjuda.setPreferredSize(new Dimension(95, 30));
    btnAjuda.addActionListener(this::mostraAjuda);
    paineAjuda.add(btnAjuda);

    GroupLayout layout = new GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap(19, Short.MAX_VALUE)
        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
          .addComponent(painelArquivo, GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
          .addComponent(painelHeader, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(paineAjuda, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addContainerGap(19, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap(20, Short.MAX_VALUE)
        .addComponent(painelHeader, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        .addGap(18, 18, 18)
        .addComponent(painelArquivo, GroupLayout.PREFERRED_SIZE, 66, GroupLayout.PREFERRED_SIZE)
        .addGap(18, 18, 18)
        .addComponent(paineAjuda, GroupLayout.PREFERRED_SIZE, 48, GroupLayout.PREFERRED_SIZE)
        .addContainerGap(35, Short.MAX_VALUE))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void mostraAjuda(ActionEvent evt) {//GEN-FIRST:event_mostraAjuda
		String ajuda = """
			Digite o nome do arquivo de simulação, sem extensão.
			O sistema buscará, na pasta raíz, pelos arquivos com o
			nome digitado e com seguintes sufixos:
			- "-drones.csv";
			- "-transportes.csv".
			
			A busca de arquivos é case-insensitive, i.e., não diferencia
			letras maiúsculas de minúsculas.

			E.g.: Ao digitar "simula", o sistema buscará pelos arquivos
			"simula-drones.csv" e "simula-transportes.csv".

			O formato dos arquivos deve corresponder à especificação no
			enunciado da tarefa; se algum erro ocorrer durante a leitura,
			o sistema continuará tentando ler os arquivos até o final e
			depois mostrará quais erros ocorreram.""";
		JOptionPane.showMessageDialog(this, ajuda, getTitle(), JOptionPane.INFORMATION_MESSAGE);
  }//GEN-LAST:event_mostraAjuda

  private void realizaSimulacao(ActionEvent evt) {//GEN-FIRST:event_realizaSimulacao
		try {
			String nomeArquivo = inputArquivo.getText();
			new ArquivoCSV(nomeArquivo).realizaLeitura();
			JOptionPane.showMessageDialog(this, "Simulação realizada com sucesso!", getTitle(), JOptionPane.INFORMATION_MESSAGE);
			inputArquivo.setText("");
		} catch (Exception e) {
			JOptionPane.showMessageDialog(this,
				"Os seguintes erros ocorreram durante a simulação:\n%s\nPara mais informações consulte o log de erros.".formatted(
					e.getMessage()),
				getTitle(),
				JOptionPane.WARNING_MESSAGE
			);
			e.printStackTrace(System.err);
		}
  }//GEN-LAST:event_realizaSimulacao

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private JTextField inputArquivo;
  // End of variables declaration//GEN-END:variables
}
