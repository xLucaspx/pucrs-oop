package views;

import javax.swing.GroupLayout;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;
import javax.swing.WindowConstants;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.WindowEvent;

/**
 * Tela principal da aplicação; contém um {@link JDesktopPane}
 * onde qualquer outra tela implementada como {@link JInternalFrame}
 * será exibida.
 *
 * @author Lucas da Paz
 */
public class App extends JFrame {

	/**
	 * Inicializa a classe {@link App} e seus componentes
	 * e define-a como visível.
	 */
	public App() {
		initComponents();
		setVisible(true);
	}

	/**
	 * Adiciona um {@link JInternalFrame} ao {@link JDesktopPane}
	 * desta tela e exibe-o.
	 *
	 * @param frame O frame que será exibido.
	 * @see JDesktopPane#add(Component)
   * @see JInternalFrame#moveToFront()
	 * @see JInternalFrame#requestFocusInWindow()
	 */
	private void mostraFrameInterno(JInternalFrame frame) {
		desktopPane.add(frame);
		frame.setLocation(20, 20);
    frame.moveToFront();
		frame.requestFocusInWindow();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    desktopPane = new JDesktopPane();
    JMenuBar menuBar = new JMenuBar();
    JMenu menuGeral = new JMenu();
    JMenuItem novoDroneMenuItem = new JMenuItem();
    JMenuItem novoTransporteMenuItem = new JMenuItem();
    JPopupMenu.Separator separadorMenuGeral1 = new JPopupMenu.Separator();
    JMenuItem processarTransporteMenuItem = new JMenuItem();
    JMenuItem situacaoTransporteMenuItem = new JMenuItem();
    JPopupMenu.Separator separadorMenuGeral2 = new JPopupMenu.Separator();
    JMenuItem sairMenuItem = new JMenuItem();
    JMenu menuRelatorio = new JMenu();
    JMenuItem relatorioGeralMenuItem = new JMenuItem();
    JMenuItem relatorioTransportesMenuItem = new JMenuItem();
    JMenu menuArquivo = new JMenu();
    JMenuItem salvarDadosMenuItem = new JMenuItem();
    JMenuItem carregarDadosMenuItem = new JMenuItem();
    JPopupMenu.Separator separatorMenuArquivo1 = new JPopupMenu.Separator();
    JMenuItem simulacaoMenuItem = new JMenuItem();

    setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
    setTitle("ACME Air Drones");
    setName(getTitle());
    setPreferredSize(new Dimension(900, 750));

    desktopPane.setPreferredSize(new Dimension(750, 600));

    GroupLayout desktopPaneLayout = new GroupLayout(desktopPane);
    desktopPane.setLayout(desktopPaneLayout);
    desktopPaneLayout.setHorizontalGroup(desktopPaneLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
      .addGap(0, 750, Short.MAX_VALUE)
    );
    desktopPaneLayout.setVerticalGroup(desktopPaneLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
      .addGap(0, 600, Short.MAX_VALUE)
    );

    menuGeral.setText("Geral");
    menuGeral.setMargin(new Insets(3, 15, 3, 15));

    novoDroneMenuItem.setText("Novo Drone");
    novoDroneMenuItem.setToolTipText("Cadastrar um novo drone no sistema");
    novoDroneMenuItem.addActionListener(this::abreCadastroDrone);
    menuGeral.add(novoDroneMenuItem);

    novoTransporteMenuItem.setText("Novo Transporte");
    novoTransporteMenuItem.setToolTipText("Cadastrar um novo transporte no sistema");
    novoTransporteMenuItem.addActionListener(this::abreNovoTransporte);
    menuGeral.add(novoTransporteMenuItem);
    menuGeral.add(separadorMenuGeral1);

    processarTransporteMenuItem.setText("Processar Transportes");
    processarTransporteMenuItem.setToolTipText("Processar os transportes na situação \"PENDENTE\"");
    processarTransporteMenuItem.addActionListener(this::abreProcessamentoTransportes);
    menuGeral.add(processarTransporteMenuItem);

    situacaoTransporteMenuItem.setText("Situação Transporte");
    situacaoTransporteMenuItem.setToolTipText("Alterar a situação de um transporte");
    situacaoTransporteMenuItem.addActionListener(this::abreSituacaoTransporte);
    menuGeral.add(situacaoTransporteMenuItem);
    menuGeral.add(separadorMenuGeral2);

    sairMenuItem.setText("Sair");
    sairMenuItem.setToolTipText("Encerrar a aplicação");
    sairMenuItem.addActionListener(this::encerrarAplicacao);
    menuGeral.add(sairMenuItem);

    menuBar.add(menuGeral);

    menuRelatorio.setText("Relatório");
    menuRelatorio.setMargin(new Insets(3, 15, 3, 15));

    relatorioGeralMenuItem.setText("Relatório Geral");
    relatorioGeralMenuItem.setToolTipText("Gerar relatório com informações de todos os drones e transportes");
    relatorioGeralMenuItem.addActionListener(this::abreRelatorioGeral);
    menuRelatorio.add(relatorioGeralMenuItem);

    relatorioTransportesMenuItem.setText("Relatório Transportes");
    relatorioTransportesMenuItem.setToolTipText("Gerar relatório com informações de todos os transportes");
    relatorioTransportesMenuItem.addActionListener(this::abreRelatorioTransportes);
    menuRelatorio.add(relatorioTransportesMenuItem);

    menuBar.add(menuRelatorio);

    menuArquivo.setText("Arquivo");
    menuArquivo.setMargin(new Insets(3, 15, 3, 15));

    salvarDadosMenuItem.setText("Salvar Dados");
    salvarDadosMenuItem.setToolTipText("Salvar todos os dados do sitema");
    salvarDadosMenuItem.addActionListener(this::abreEscritaDados);
    menuArquivo.add(salvarDadosMenuItem);

    carregarDadosMenuItem.setText("Carregar Dados");
    carregarDadosMenuItem.setToolTipText("Carregar dados salvos para o sistema");
    carregarDadosMenuItem.addActionListener(this::abreLeituraDados);
    menuArquivo.add(carregarDadosMenuItem);
    menuArquivo.add(separatorMenuArquivo1);

    simulacaoMenuItem.setText("Simulação");
    simulacaoMenuItem.setToolTipText("Realizar leitura de dados de simulação");
    simulacaoMenuItem.addActionListener(this::abreSimulacao);
    menuArquivo.add(simulacaoMenuItem);

    menuBar.add(menuArquivo);

    setJMenuBar(menuBar);

    GroupLayout layout = new GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
      .addComponent(desktopPane, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
      .addComponent(desktopPane, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void abreCadastroDrone(ActionEvent evt) {//GEN-FIRST:event_abreCadastroDrone
		mostraFrameInterno(new CadastroDrone());
  }//GEN-LAST:event_abreCadastroDrone

  private void abreProcessamentoTransportes(ActionEvent evt) {//GEN-FIRST:event_abreProcessamentoTransportes
		mostraFrameInterno(new ProcessamentoTransportes());
  }//GEN-LAST:event_abreProcessamentoTransportes

  private void encerrarAplicacao(ActionEvent evt) {//GEN-FIRST:event_encerrarAplicacao
		dispose();
		dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
  }//GEN-LAST:event_encerrarAplicacao

  private void abreRelatorioGeral(ActionEvent evt) {//GEN-FIRST:event_abreRelatorioGeral
		mostraFrameInterno(new RelatorioGeral());
  }//GEN-LAST:event_abreRelatorioGeral

  private void abreRelatorioTransportes(ActionEvent evt) {//GEN-FIRST:event_abreRelatorioTransportes
		mostraFrameInterno(new RelatorioTransportes());
  }//GEN-LAST:event_abreRelatorioTransportes

  private void abreNovoTransporte(ActionEvent evt) {//GEN-FIRST:event_abreNovoTransporte
		mostraFrameInterno(new CadastroTransporte());
  }//GEN-LAST:event_abreNovoTransporte

  private void abreSituacaoTransporte(ActionEvent evt) {//GEN-FIRST:event_abreSituacaoTransporte
		mostraFrameInterno(new SituacaoTransporte());
  }//GEN-LAST:event_abreSituacaoTransporte

  private void abreSimulacao(ActionEvent evt) {//GEN-FIRST:event_abreSimulacao
		mostraFrameInterno(new LeituraSimulacao());
  }//GEN-LAST:event_abreSimulacao

  private void abreEscritaDados(ActionEvent evt) {//GEN-FIRST:event_abreEscritaDados
    mostraFrameInterno(new EscritaDados());
  }//GEN-LAST:event_abreEscritaDados

  private void abreLeituraDados(ActionEvent evt) {//GEN-FIRST:event_abreLeituraDados
    mostraFrameInterno(new LeituraDados());
  }//GEN-LAST:event_abreLeituraDados

  // Variables declaration - do not modify//GEN-BEGIN:variables
  JDesktopPane desktopPane;
  // End of variables declaration//GEN-END:variables
}
